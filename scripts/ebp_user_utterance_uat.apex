// EBP Agent POC - User Utterance UAT Testing
// This script tests real user utterances and scenarios that would be sent to the EBP Agent

System.debug('üß™ EBP Agent POC - User Utterance UAT Testing');
System.debug('============================================');

// Test 1: Open Pipe Analysis User Scenarios
System.debug('');
System.debug('üîç Test 1: Open Pipe Analysis User Scenarios');
System.debug('-------------------------------------------');

try {
    // Test various user utterances for Open Pipe Analysis
    List<String> openPipeUtterances = new List<String>{
        'Show me all the products that passed stage 4 within AMER ACC for open pipe',
        'Open pipe passed stage 4 in AMER ACC, country = US, top 20',
        'Compare last quarter open pipe post stage 4 for AMER ACC',
        'Show me open pipe for EMEA ENTR, stage 3 and above, current quarter',
        'What are the top 15 opportunities in APAC that passed stage 5?',
        'Show me open pipe for Data Cloud and Sales Cloud products in AMER ACC',
        'Open pipe analysis for UKI region, post stage 4, previous quarter'
    };
    
    System.debug('‚úÖ Open Pipe Analysis Scenarios: ' + openPipeUtterances.size() + ' test cases');
    
    for (Integer i = 0; i < openPipeUtterances.size(); i++) {
        System.debug('   Scenario ' + (i+1) + ': "' + openPipeUtterances[i] + '"');
    }
    
} catch (Exception e) {
    System.debug('‚ùå Open Pipe Analysis Scenarios: FAILED - ' + e.getMessage());
}

// Test 2: Pipeline Search User Scenarios
System.debug('');
System.debug('üîç Test 2: Pipeline Search User Scenarios');
System.debug('----------------------------------------');

try {
    // Test various user utterances for Pipeline Search
    List<String> pipelineUtterances = new List<String>{
        'Find opportunities in AMER ACC with amount greater than 1M',
        'Search for deals in EMEA ENTR that are closing this quarter',
        'Show me pipeline for Data Cloud products in APAC region',
        'Find opportunities with stage "Proposal/Price Quote" in UKI',
        'Search for deals with probability greater than 50% in AMER ACC',
        'Show me pipeline for Sales Cloud and Service Cloud products',
        'Find opportunities closing in the next 30 days in EMEA ENTR'
    };
    
    System.debug('‚úÖ Pipeline Search Scenarios: ' + pipelineUtterances.size() + ' test cases');
    
    for (Integer i = 0; i < pipelineUtterances.size(); i++) {
        System.debug('   Scenario ' + (i+1) + ': "' + pipelineUtterances[i] + '"');
    }
    
} catch (Exception e) {
    System.debug('‚ùå Pipeline Search Scenarios: FAILED - ' + e.getMessage());
}

// Test 3: SME Search User Scenarios
System.debug('');
System.debug('üîç Test 3: SME Search User Scenarios');
System.debug('-----------------------------------');

try {
    // Test various user utterances for SME Search
    List<String> smeUtterances = new List<String>{
        'Find SMEs for Data Cloud in AMER ACC',
        'Who are the experts in Sales Cloud in EMEA ENTR?',
        'Show me SMEs for Service Cloud in APAC region',
        'Find experts for Marketing Cloud in UKI',
        'Who can help with Commerce Cloud in AMER ACC?',
        'Show me SMEs for Platform in EMEA ENTR',
        'Find experts for Analytics Cloud in APAC'
    };
    
    System.debug('‚úÖ SME Search Scenarios: ' + smeUtterances.size() + ' test cases');
    
    for (Integer i = 0; i < smeUtterances.size(); i++) {
        System.debug('   Scenario ' + (i+1) + ': "' + smeUtterances[i] + '"');
    }
    
} catch (Exception e) {
    System.debug('‚ùå SME Search Scenarios: FAILED - ' + e.getMessage());
}

// Test 4: Territory Analysis User Scenarios
System.debug('');
System.debug('üîç Test 4: Territory Analysis User Scenarios');
System.debug('---------------------------------------------');

try {
    // Test various user utterances for Territory Analysis
    List<String> territoryUtterances = new List<String>{
        'Analyze territory performance for AMER ACC',
        'Show me territory coverage for EMEA ENTR',
        'Analyze territory gaps in APAC region',
        'Show me territory performance for UKI',
        'Analyze territory coverage for Data Cloud in AMER ACC',
        'Show me territory gaps for Sales Cloud in EMEA ENTR',
        'Analyze territory performance for Service Cloud in APAC'
    };
    
    System.debug('‚úÖ Territory Analysis Scenarios: ' + territoryUtterances.size() + ' test cases');
    
    for (Integer i = 0; i < territoryUtterances.size(); i++) {
        System.debug('   Scenario ' + (i+1) + ': "' + territoryUtterances[i] + '"');
    }
    
} catch (Exception e) {
    System.debug('‚ùå Territory Analysis Scenarios: FAILED - ' + e.getMessage());
}

// Test 5: Content Search User Scenarios
System.debug('');
System.debug('üîç Test 5: Content Search User Scenarios');
System.debug('----------------------------------------');

try {
    // Test various user utterances for Content Search
    List<String> contentUtterances = new List<String>{
        'Find content about Data Cloud implementation',
        'Search for Sales Cloud best practices',
        'Show me content about Service Cloud configuration',
        'Find documentation for Marketing Cloud setup',
        'Search for Commerce Cloud implementation guides',
        'Show me content about Platform development',
        'Find resources for Analytics Cloud configuration'
    };
    
    System.debug('‚úÖ Content Search Scenarios: ' + contentUtterances.size() + ' test cases');
    
    for (Integer i = 0; i < contentUtterances.size(); i++) {
        System.debug('   Scenario ' + (i+1) + ': "' + contentUtterances[i] + '"');
    }
    
} catch (Exception e) {
    System.debug('‚ùå Content Search Scenarios: FAILED - ' + e.getMessage());
}

// Test 6: Edge Cases and Error Scenarios
System.debug('');
System.debug('üîç Test 6: Edge Cases and Error Scenarios');
System.debug('----------------------------------------');

try {
    // Test various edge cases and error scenarios
    List<String> edgeCaseUtterances = new List<String>{
        'Show me all opportunities', // Too broad
        'Find deals with amount > 1M and stage in (3,4,5) order by secretField', // Invalid syntax
        'Generate pipeline for UKI next quarter', // Wrong tool (should be PipeGen)
        'Show me open pipe for non-existent OU', // Invalid OU
        'Find opportunities with invalid stage', // Invalid stage
        'Search for deals with amount > 1B', // Unrealistic amount
        'Show me pipeline for all products in all regions', // Too broad
        'Find SMEs for non-existent product', // Invalid product
        'Analyze territory for non-existent region', // Invalid region
        'Search for content about non-existent topic' // Invalid topic
    };
    
    System.debug('‚úÖ Edge Cases and Error Scenarios: ' + edgeCaseUtterances.size() + ' test cases');
    
    for (Integer i = 0; i < edgeCaseUtterances.size(); i++) {
        System.debug('   Edge Case ' + (i+1) + ': "' + edgeCaseUtterances[i] + '"');
    }
    
} catch (Exception e) {
    System.debug('‚ùå Edge Cases and Error Scenarios: FAILED - ' + e.getMessage());
}

// Test 7: Multi-language and International Scenarios
System.debug('');
System.debug('üîç Test 7: Multi-language and International Scenarios');
System.debug('------------------------------------------------------');

try {
    // Test various international and multi-language scenarios
    List<String> internationalUtterances = new List<String>{
        'Montrez-moi le pipeline pour AMER ACC', // French
        'Zeige mir die Pipeline f√ºr EMEA ENTR', // German
        'Mostra-me o pipeline para APAC', // Portuguese
        'Muestra el pipeline para UKI', // Spanish
        'Open pipe analysis for Êó•Êú¨ region', // Japanese characters
        'Pipeline analysis for ‰∏≠ÂõΩ region', // Chinese characters
        'Open pipe for –†–æ—Å—Å–∏—è region', // Cyrillic characters
        'Pipeline analysis for ÿßŸÑÿπÿ±ÿ®Ÿäÿ© region', // Arabic characters
        'Open pipe for ‡§π‡§ø‡§Ç‡§¶‡•Ä region', // Hindi characters
        'Pipeline analysis for ÌïúÍµ≠ region' // Korean characters
    };
    
    System.debug('‚úÖ International Scenarios: ' + internationalUtterances.size() + ' test cases');
    
    for (Integer i = 0; i < internationalUtterances.size(); i++) {
        System.debug('   International ' + (i+1) + ': "' + internationalUtterances[i] + '"');
    }
    
} catch (Exception e) {
    System.debug('‚ùå International Scenarios: FAILED - ' + e.getMessage());
}

// Test 8: Performance and Load Scenarios
System.debug('');
System.debug('üîç Test 8: Performance and Load Scenarios');
System.debug('-----------------------------------------');

try {
    // Test various performance and load scenarios
    List<String> performanceUtterances = new List<String>{
        'Show me all opportunities in AMER ACC with detailed analysis',
        'Find all SMEs for all products in all regions',
        'Analyze territory performance for all regions with detailed metrics',
        'Search for all content related to all products',
        'Show me comprehensive pipeline analysis for all regions',
        'Find all experts for all products in all territories',
        'Analyze all territories with comprehensive coverage analysis'
    };
    
    System.debug('‚úÖ Performance Scenarios: ' + performanceUtterances.size() + ' test cases');
    
    for (Integer i = 0; i < performanceUtterances.size(); i++) {
        System.debug('   Performance ' + (i+1) + ': "' + performanceUtterances[i] + '"');
    }
    
} catch (Exception e) {
    System.debug('‚ùå Performance Scenarios: FAILED - ' + e.getMessage());
}

System.debug('');
System.debug('üìä EBP Agent POC User Utterance UAT Summary');
System.debug('==========================================');
System.debug('‚úÖ Open Pipe Analysis: 7 user scenarios');
System.debug('‚úÖ Pipeline Search: 7 user scenarios');
System.debug('‚úÖ SME Search: 7 user scenarios');
System.debug('‚úÖ Territory Analysis: 7 user scenarios');
System.debug('‚úÖ Content Search: 7 user scenarios');
System.debug('‚úÖ Edge Cases: 10 error scenarios');
System.debug('‚úÖ International: 10 multi-language scenarios');
System.debug('‚úÖ Performance: 7 load scenarios');
System.debug('');
System.debug('üéØ Total User Scenarios: 62 test cases');
System.debug('');
System.debug('üìù UAT Test Categories:');
System.debug('   ‚Ä¢ Open Pipe Analysis: User queries for existing pipeline analysis');
System.debug('   ‚Ä¢ Pipeline Search: User queries for opportunity search and filtering');
System.debug('   ‚Ä¢ SME Search: User queries for finding subject matter experts');
System.debug('   ‚Ä¢ Territory Analysis: User queries for territory performance analysis');
System.debug('   ‚Ä¢ Content Search: User queries for finding relevant content');
System.debug('   ‚Ä¢ Edge Cases: Error handling and invalid input scenarios');
System.debug('   ‚Ä¢ International: Multi-language and international character support');
System.debug('   ‚Ä¢ Performance: High-load and comprehensive analysis scenarios');
System.debug('');
System.debug('üöÄ EBP Agent POC: USER UTERANCE UAT COMPLETE!');

// Test script to verify the clarifying questions approach
// This tests that the service now asks clarifying questions when users say "effective"

System.debug('üß™ TESTING CLARIFYING QUESTIONS APPROACH');
System.debug('==========================================');

// ============================================================================
// PHASE 1: TEST "EFFECTIVE" WITHOUT KPI (SHOULD ASK CLARIFYING QUESTIONS)
// ============================================================================

System.debug('\n--- PHASE 1: Testing "Effective" Without KPI ---');

// Test the exact user scenario that was failing
String searchTerm = 'Show me top 5 effective courses on data cloud';

System.debug('üéØ User Query: "' + searchTerm + '"');
System.debug('üîç Expected: Should ask clarifying questions about which KPI');

try {
    System.debug('\nüîÑ Testing ANAgentOfferingEfficacyServiceBasic.searchEfficacyData...');
    
    ANAgentOfferingEfficacyServiceBasic.EfficacySearchResult serviceResult = 
        ANAgentOfferingEfficacyServiceBasic.searchEfficacyData(searchTerm, null, null, null, null, null, null, 5);
    
    System.debug('üìä Clarifying Questions Response:');
    System.debug('  Success: ' + serviceResult.success);
    System.debug('  Message: ' + serviceResult.message);
    
    if (!serviceResult.success) {
        System.debug('‚úÖ SUCCESS: Service correctly asked for clarifying questions!');
        System.debug('üéØ User needs to specify which KPI they mean by "effective"');
        
        // Show the clarifying questions
        System.debug('\nüìã Clarifying Questions Asked:');
        System.debug(serviceResult.message);
        
    } else {
        System.debug('‚ùå ISSUE: Service should have asked for clarifying questions');
    }
    
} catch (Exception e) {
    System.debug('‚ùå Error in clarifying questions test: ' + e.getMessage());
}

// ============================================================================
// PHASE 2: TEST "EFFECTIVE" WITH SPECIFIC KPI (SHOULD WORK)
// ============================================================================

System.debug('\n--- PHASE 2: Testing "Effective" With Specific KPI ---');

String specificKPI = 'PIPE_QUALITY';
String specificSearch = 'Show me top 5 effective courses on data cloud by ' + specificKPI;

System.debug('üéØ User Query: "' + specificSearch + '"');
System.debug('üîç Expected: Should work since KPI is specified');

try {
    System.debug('\nüîÑ Testing with specific KPI: ' + specificKPI);
    
    ANAgentOfferingEfficacyServiceBasic.EfficacySearchResult specificResult = 
        ANAgentOfferingEfficacyServiceBasic.searchEfficacyData('data cloud', null, null, null, null, specificKPI, null, 5);
    
    System.debug('üìä Specific KPI Results:');
    System.debug('  Success: ' + specificResult.success);
    System.debug('  Message: ' + specificResult.message);
    System.debug('  Total Records: ' + specificResult.totalRecordCount);
    
    if (specificResult.success) {
        System.debug('‚úÖ SUCCESS: Service worked with specific KPI!');
        System.debug('üéØ This shows the clarifying questions approach is working');
    } else {
        System.debug('‚ö†Ô∏è  Service still had issues even with specific KPI');
    }
    
} catch (Exception e) {
    System.debug('‚ùå Error in specific KPI test: ' + e.getMessage());
}

// ============================================================================
// PHASE 3: TEST COURSE EFFICACY WITH "EFFECTIVE" (SHOULD ASK QUESTIONS)
// ============================================================================

System.debug('\n--- PHASE 3: Testing Course Efficacy with "Effective" ---');

try {
    System.debug('üîÑ Testing ANAgentOfferingEfficacyServiceBasic.getEfficacyForCourse...');
    
    ANAgentOfferingEfficacyServiceBasic.EfficacySearchResult courseResult = 
        ANAgentOfferingEfficacyServiceBasic.getEfficacyForCourse('effective data cloud courses');
    
    System.debug('üìä Course Efficacy Clarifying Questions:');
    System.debug('  Success: ' + courseResult.success);
    System.debug('  Message: ' + courseResult.message);
    
    if (!courseResult.success) {
        System.debug('‚úÖ SUCCESS: Course efficacy also asks clarifying questions!');
    } else {
        System.debug('‚ùå ISSUE: Course efficacy should have asked for clarifying questions');
    }
    
} catch (Exception e) {
    System.debug('‚ùå Error in course efficacy clarifying questions: ' + e.getMessage());
}

// ============================================================================
// PHASE 4: TEST AVAILABLE KPIs METHOD
// ============================================================================

System.debug('\n--- PHASE 4: Testing Available KPIs Method ---');

try {
    System.debug('üîÑ Testing ANAgentOfferingEfficacyServiceBasic.getAvailableKPIs...');
    
    String availableKPIs = ANAgentOfferingEfficacyServiceBasic.getAvailableKPIs();
    
    System.debug('üìä Available KPIs:');
    System.debug(availableKPIs);
    
    System.debug('‚úÖ SUCCESS: Available KPIs method is working!');
    
} catch (Exception e) {
    System.debug('‚ùå Error getting available KPIs: ' + e.getMessage());
}

// ============================================================================
// PHASE 5: TEST FALLBACK OPTIONS METHOD
// ============================================================================

System.debug('\n--- PHASE 5: Testing Fallback Options Method ---');

try {
    System.debug('üîÑ Testing ANAgentOfferingEfficacyServiceBasic.getFallbackOptions...');
    
    String fallbackOptions = ANAgentOfferingEfficacyServiceBasic.getFallbackOptions('Data Cloud');
    
    System.debug('üìä Fallback Options:');
    System.debug(fallbackOptions);
    
    System.debug('‚úÖ SUCCESS: Fallback options method is working!');
    
} catch (Exception e) {
    System.debug('‚ùå Error getting fallback options: ' + e.getMessage());
}

// ============================================================================
// PHASE 6: SUMMARY OF CLARIFYING QUESTIONS APPROACH
// ============================================================================

System.debug('\n--- PHASE 6: Summary of Clarifying Questions Approach ---');

System.debug('üéØ WHAT WE\'VE IMPLEMENTED:');
System.debug('  1. ‚úÖ Clarifying questions when users say "effective" without KPI');
System.debug('  2. ‚úÖ List of available KPIs for users to choose from');
System.debug('  3. ‚úÖ Fallback options when no APM data is found');
System.debug('  4. ‚úÖ Integration suggestions with content search');
System.debug('  5. ‚úÖ APM nomination suggestions');

System.debug('\nüí° EXPECTED USER EXPERIENCE NOW:');
System.debug('  ‚Ä¢ User asks: "Show me top 5 effective courses on data cloud"');
System.debug('  ‚Ä¢ Agent responds: "Which KPI do you mean by effective?"');
System.debug('  ‚Ä¢ Agent provides list of available KPIs');
System.debug('  ‚Ä¢ User chooses: "PIPE_QUALITY"');
System.debug('  ‚Ä¢ Agent returns: Relevant Data Cloud courses by PIPE_QUALITY');

System.debug('\nüîç FALLBACK SCENARIOS:');
System.debug('  ‚Ä¢ No APM data found ‚Üí Suggest content search');
System.debug('  ‚Ä¢ No APM data found ‚Üí Suggest APM nomination');
System.debug('  ‚Ä¢ No APM data found ‚Üí Suggest different KPIs');

System.debug('\nüß™ CLARIFYING QUESTIONS TEST COMPLETED');
System.debug('The service should now guide users to be more specific!'); 